@model EditProjectModel


<div class="Section">
    <h1>Edit Project</h1>
    @using(Html.BeginForm()) {
        @(Html.FormRow()
            .AddToLeft(Html.LabelFor(m => m.Name))
            .AddToRight(Html.TextBoxFor(m => m.Name))
            .AddToRight(Html.ValidationMessageFor(x => x.Name)))

        @(Html.FormRow()
            .AddToLeft(Html.LabelFor(m => m.Url))
            .AddToRight(Html.TextBoxFor(m => m.Url))
            .AddToRight(Html.ValidationMessageFor(x => x.Url))
            .AppendDescription("A url pertaining to this project."))

        @(Html.FormRow()
            .AddToLeft(Html.LabelFor(m => m.Due))
            .AddToRight(Html.DatePickerFor(m => m.Due))
            .AddToRight(Html.ValidationMessageFor(x => x.Due)))


        @(Html.FormRow()
            .AddToLeft(Html.LabelFor(m => m.Lead))
            .AddToRight(Html.DropDownListFor(m => m.Lead, Model.Users.ToSelectList("Id", "Email")))
                .AddToRight(Html.ValidationMessageFor(x => x.Lead)))
 

        @(Html.FormRow()
            .AddToLeft(Html.LabelFor(m => m.ColorPaletteId))
            .AddToRight(Html.DropDownListFor(m => m.ColorPaletteId, Model.ColorPalettes.ToSelectList("Id", "Name")))
                .AddToRight(Html.ValidationMessageFor(x => x.ColorPaletteId)))
     

        @(Html.FormRow()
            .AddToRight(Html.SaveButton("Save", null)))
    }
</div>

